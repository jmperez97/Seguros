@model Seguros.Models.Poliza

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Poliza</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.idPoliza)


		<div class="form-group">
			@Html.LabelFor(model => model.idPoliza, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.idPoliza, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
				@Html.ValidationMessageFor(model => model.idPoliza, "", new { @class = "text-danger" })
			</div>
		</div>


		<div class="form-group">
			@Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.periodo, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.periodo, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.periodo, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.idRiesgo, "idRiesgo", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<select id="CbidRiesgo">
					<option value="1">Bajo</option>
					<option value="2">Medio</option>
					<option value="3">Medio-alto</option>
					<option value="4">Alto</option>
				</select>
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.precio, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-12">
				<button type="button" id="Guardar" class="btn">Editar Poliza</button>
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "ListarPolizas")
</div>
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script>
		$('#Guardar').click(function () {
			var id = $('#idPoliza').val();
			var name = $('#nombre').val();
			var name = $('#nombre').val();
			var desc = $('#descripcion').val();
			var peri = $('#periodo').val();
			var riesgo = $('#CbidRiesgo').val();
			var prec = $('#precio').val()

			var JSONObject = { // Create JSON object to pass through AJAX
				idPoliza:id,
				nombre: name,
				descripcion: desc,
				periodo: peri,
				idRiesgo: riesgo,
				precio: prec

			};
			debugger;
			$.ajax({ //Do an ajax post to the controller
				type: 'POST',
				url: 'EditarPoliza',
				data: JSON.stringify(JSONObject),
				contentType: "application/json; charset=utf-8",
				dataType: "json"
			});


		});
	</script>
}
